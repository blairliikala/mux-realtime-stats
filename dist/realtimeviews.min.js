var n=class extends HTMLElement{#s="";#c={seconds:0,relative:"",time:{}};#n=5;#l=!0;#d=!0;#w="Watching";#u="Viewers";#e={};#a=0;#h=!0;#o={seconds:0,relative:""};#t={};#r={};constructor(){super(),window.addEventListener("offline",()=>{this.stop()}),window.addEventListener("online",()=>{this.start()}),window.addEventListener("visibilitychange",()=>{document.visibilityState==="visible"?this.start():this.stop()})}set token(e){this.setAttribute("token",e)}get token(){return this.#s}get tokenExpiration(){return this.#c}set views(e){e?this.setAttribute("views","true"):this.removeAttribute("views")}get views(){return this.#e.data[0]?.views||0}set viewsLabel(e){typeof e=="string"&&this.setAttribute("views-label",e)}get viewers(){return this.#e.data[0]?.viewers||0}set viewers(e){e?this.setAttribute("viewers","true"):this.removeAttribute("viewers")}set viewersLabel(e){typeof e=="string"&&this.setAttribute("viewers-label",e)}set refresh(e){if(typeof e!="number"){let s=Number(e);if(Number.isNaN(s)){console.warn("Interval must be a number.");return}}if(e<5){console.warn("Error: Ping interval must be at or above 5 seconds. Setting to 5 seconds."),this.#n=5,this.stop(),this.start();return}this.#n=e,this.stop(),this.start()}get refresh(){return this.#n}get data(){return this.#e.data[0]||null}get errorcount(){return this.#a}get lastUpdate(){return this.#o}css=`
    <style>
      .realtime_container {
          display:inline-flex;
          gap: 1em;
          --text-color: unset;
          font-size:1em;
        }
        .view_container {
          display: flex;
          position: relative;
          flex-direction: column;
          justify-content: center;
          text-align: center;
          background:rgba(0,0,0,0);
          padding: .5rem;
          border-radius: 50%;
          aspect-ratio: 1 / 1;
        }
        .title {
          text-transform: uppercase;
          opacity:.5;
          font-size:.8rem;
          margin-top:.3rem;
        }
        .data {
          font-size: 1.5rem;
          display: flex;
          justify-content: space-evenly;
          align-items: stretch;
          align-content: center;
        }
        .spacer {
          min-width: 1em;
        }
        .pulseonce {
          box-shadow: 0 0 0 0 rgba(0, 0, 0, 1);
          transform: scale(1);
          animation: pulse-black 2s 1;
        }
        .increase, .decrease {
          animation: toBlack ease 1s;
          animation-iteration-count: 1;
          animation-fill-mode: forwards;
          animation-delay: 1s;
        }
        .increase {
          color: green;
        }
        .decrease {
          color: red;
        }
        .fadeOut {
          animation: fadeOut ease 1s;
          animation-iteration-count: 1;
          animation-fill-mode: forwards;
          animation-delay: 1s;
        }
        @keyframes pulse-black {
          0% {
            transform: scale(0.95);
            box-shadow: 0 0 0 0 rgba(0, 0, 0, 0.7);
          }
          70% {
            transform: scale(1);
            box-shadow: 0 0 0 10px rgba(0, 0, 0, 0);
          }
          100% {
            transform: scale(0.95);
            box-shadow: 0 0 0 0 rgba(0, 0, 0, 0);
          }
        }

        @keyframes fadeOut {
          0% {
            opacity: 1;
          }
          100% {
            opacity: 0;
          }
        }
        @keyframes toBlack {
          0% {}
          100% {
            color: var(--text-color);
          }
        }
    </style>`;init(){let e=document.createElement("template");e.innerHTML=`
      ${this.css}
      <section class='realtime_container'>
        <slot name='views'></slot>
        <slot name='viewers'></slot>
      </section>
    `;let s=e.content.cloneNode(!0);this.attachShadow({mode:"open"}).appendChild(s),this.#t={root:this.shadowRoot?.querySelector(".realtime_container"),views:this.shadowRoot?.querySelector("[data-views]"),viewers:this.shadowRoot?.querySelector("[data-viewers]"),elapsed:this.shadowRoot?.querySelector("[data-elapsed]")},this.#r={viewsSlot:this.shadowRoot?.querySelector("slot[name=views]"),viewersSlot:this.shadowRoot?.querySelector("slot[name=viewers]")},this.create()}create(){if(!this.shadowRoot)return;if(this.#s=this.getAttribute("token")||"",this.#n=Number(this.getAttribute("refresh"))||5,this.#l=this.hasAttribute("views"),this.#d=this.hasAttribute("viewers"),this.#w=this.getAttribute("views-label")||"Watching",this.#u=this.getAttribute("viewers-label")||"Viewers",!this.#s){console.warn("Please include a token"),this.#i("error","Please include a token",{});return}let e=this.#t.root.querySelector("[data-views]");if(e&&e.parentElement.remove(),this.#l){let t=document.createElement("div");t.classList.add("view_container"),t.innerHTML=`
            <span class='data' data-views>
              <span class='spacer' data-icon></span>
              <span data-amount>0</span>
              <span class='spacer'></span>
            </span>
            <span class='title'>${this.#w}</span>`,this.#t.root.appendChild(t),this.#t.views=this.shadowRoot.querySelector("[data-views]")}!this.#l&&e&&e.parentElement.remove();let s=this.#t.root.querySelector("[data-viewers]");if(s&&s.parentElement.remove(),this.#d){let t=document.createElement("div");t.classList.add("view_container"),t.innerHTML=`
            <span class='data' data-viewers>
              <span class='spacer' data-icon></span>
              <span data-amount>0</span>
              <span class='spacer'></span>
            </span>
            <span class='title'>${this.#u}</span>`,this.#t.root.appendChild(t),this.#t.viewers=this.shadowRoot.querySelector("[data-viewers]")}!this.#d&&s&&s.parentElement.remove(),this.shadowRoot.querySelector("slot[name=views]")&&(this.#r.views=this.querySelector("[data-views]")),this.shadowRoot.querySelector("slot[name=viewers]")&&(this.#r.viewers=this.querySelector("[data-viewers]")),this.start()}async getRealTimeViews(){let e={...this.#e};if(this.#a>4){this.#a===10&&console.warn("Too many errors, stopping.");return}if("online"in navigator&&!navigator.onLine)return;let{isExpired:s,timeString:t}=this.checkJWTExpiration(this.#s);if(s){this.#i("expired",`JWT Token expired ${t}. Please provide a new token.`,{}),this.stop();return}let i=this.getURL(this.#s),a=await this.getData(i);if(!a){this.#i("error","Unknown error getting data.",a);return}if("error"in a){this.#i("error",a.error.messages[0],a);return}this.#e=a,this.#i("update","Data Updated",this.#e),this.#a=0,this.#o.seconds=0;let r=this.#e.data?this.#e.data[0].views:0,o=this.#e.data?this.#e.data[0].viewers:0,c=e.data?e.data[0].views:0,h=e.data?e.data[0].viewers:0;this.#t.views&&this.updateDiv(r,c,this.#t.views),this.#t.viewers&&this.updateDiv(o,h,this.#t.viewers),this.#r.views&&this.updateDiv(r,c,this.#r.views),this.#r.viewers&&this.updateDiv(o,h,this.#r.viewers),this.#h&&setTimeout(()=>this.getRealTimeViews(),this.#n*1e3)}updateDiv(e,s,t){if(!t)return;let i=t.querySelector("[data-icon]"),a=t.querySelector("[data-amount]");s!=e&&(t.classList.add("pulseonce"),e>s&&(t.classList.add("increase"),i&&(i.innerHTML="+"),i&&i.classList.add("fadeOut"),this.#i("increase","Increase",{previous:s,current:e,data:this.#e.data})),e<s&&(t.classList.add("decrease"),i&&(i.innerHTML="-"),i&&i.classList.add("fadeOut"),this.#i("decrease","Decrease",{previous:s,current:e,data:this.#e.data})),t.addEventListener("animationend",()=>{t.classList.remove("pulseonce"),t.classList.remove("increase"),t.classList.remove("decrease"),i&&i.classList.remove("fadeOut"),i&&(i.innerHTML="")})),a&&(a.innerHTML=e)}async getData(e){if(e)return await fetch(e).then(s=>{if(s.ok)return s.json();this.#i("error","Unable to get Data.",s),this.#a++}).catch(s=>{this.#i("error","Unable to get Data.",s),this.#a++})}stop(){return this.#h=!1,"Refresh Intervals Off."}start(){return this.#h=!0,this.getRealTimeViews(),this.clock(),"Refresh Intervals On."}clock(){this.#o.seconds++;let e=new Date,s=e.setSeconds(e.getSeconds()-this.#o.seconds);if(this.#o.relative=this.#p(s)||"",this.#s){let{timeString:t,expiration:i}=this.checkJWTExpiration(this.#s);this.#c.relative=t||"",this.#c.time=new Date(i),this.#c.seconds=Math.round((new Date(i)-new Date)/1e3)}this.#h&&setTimeout(()=>this.clock(),1e3)}checkJWTExpiration(e){let s=this.parseJwt(e);if(!s)throw new Error("JWT Token could not be parsed.");if(!("exp"in s))throw new Error("No exp parameter in JWT.");let t=new Date(0).setUTCSeconds(s.exp),i=this.#p(t);return{isExpired:t<new Date,timeString:i,expiration:t}}parseJwt(e){let s="";try{let i=e.split(".")[1].replace(/-/g,"+").replace(/_/g,"/");s=decodeURIComponent(window.atob(i).split("").map(function(a){return"%"+("00"+a.charCodeAt(0).toString(16)).slice(-2)}).join(""))}catch{console.warn("Token may not be a real token",e);return}return JSON.parse(s)}#p(e,s=new Date){let t={year:31536e6,month:2628e6,day:864e5,hour:36e5,minute:6e4,second:1e3},i=new Intl.RelativeTimeFormat("en",{numeric:"auto"}),a=e-s;for(var r in t)if(Math.abs(a)>t[r]||r=="second")return i.format(Math.round(a/t[r]),r)}#i(e,s,t){this.dispatchEvent(new CustomEvent(e,{detail:{message:s,full:t}}))}getURL(){return`https://stats.mux.com/counts?token=${this.#s}`}#v(e,s){let t=s>1||!0,i=e.slice(-1)==="s"||e.slice(-1)==="S",a=e;if(t)i||(a=`${e}s`);else return i?a=e.substring(0,e.length-1):a="",a;return a}connectedCallback(){this.init()}disconnectedCallback(){this.stop()}static get observedAttributes(){return["token","views","viewers","refresh","views-label","viewers-label"]}attributeChangedCallback(e,s,t){e==="token"&&(this.#s=t,this.#a=0),this.create()}};customElements.define("mux-realtime-views",n);export{n as MuxRealtimeViews};
